<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Your Cart - Eco-Friendly Finder</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <style>
    html, body { height: 100%; }
    body { display: flex; flex-direction: column; background-color: #f7f7f7; }
    main { flex: 1; }
    .social-icon { width: 24px; height: 24px; }
    .card { transition: transform 0.3s ease; }
    .card:hover { transform: scale(1.05); }
    .btn-custom-green { background-color: #28a745; color: white; }
    .btn-custom-green:hover { background-color: #218838; }
    .btn-custom-danger { background-color: #dc3545; color: white; }
    .btn-custom-danger:hover { background-color: #c82333; }
    .btn-custom-secondary { background-color: #6c757d; color: white; }
    .btn-custom-secondary:hover { background-color: #5a6268; }
    .navbar-nav .nav-link.active {
      border-bottom: 4px solid green;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-expand-lg fixed-top navbar-dark" style="background-color: #28a745;">
    <div class="container">
      <a class="navbar-brand" href="index.html">Eco-Friendly Finder</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item"><a class="nav-link" href="index.html">Home</a></li>
          <li class="nav-item"><a class="nav-link" href="products.html">Products</a></li>
          <li class="nav-item"><a class="nav-link" href="contact.html">Contact</a></li>
          <li class="nav-item"><a class="nav-link" href="about.html">About Us</a></li>
          <li class="nav-item">
            <a class="nav-link position-relative" href="cart.html">
              Cart <span class="badge bg-warning text-dark position-absolute top-0 start-100 translate-middle" id="cart-count">0</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <main class="cart py-5 mt-5">
    <div class="container">
      <h2 class="text-center mb-4">Your Cart</h2>
      <div class="row" id="cart-items"></div>
      <div class="text-center mt-4">
        <h4 id="total-price" class="mb-3"></h4>
        <button class="btn btn-custom-danger me-2" onclick="clearCart()">Clear Cart</button>
        <button class="btn btn-custom-green me-2" onclick="checkout()">Checkout</button>
        <button class="btn btn-custom-secondary me-2" onclick="downloadInvoice()">Download Invoice</button>
        <a href="products.html" class="btn btn-outline-success">Continue Shopping</a>
      </div>
    </div>
  </main>

  <footer class="bg-dark text-white text-center py-4">
    <p>&copy; 2025 Eco-Friendly Finder. All rights reserved.</p>
    <div class="d-flex justify-content-center align-items-center mt-2 gap-3">
      <a href="https://www.facebook.com/tiger.tashi/" target="_blank">
        <img src="facebook.png" alt="Facebook" class="social-icon">
      </a>
      <a href="https://x.com/DORJITA406" target="_blank">
        <img src="twitter.png" alt="Twitter" class="social-icon">
      </a>
      <a href="#" target="_blank">
        <img src="instagram.png" alt="Instagram" class="social-icon">
      </a>
    </div>
  </footer>

  <script>
    const cartKey = 'ecoCart';
    const cartList = document.getElementById('cart-items');
    const totalPriceElement = document.getElementById('total-price');

    function loadCart() {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      cartList.innerHTML = '';
      let total = 0;

      if (cart.length === 0) {
        cartList.innerHTML = '<div class="col-12 text-center"><p>Your cart is empty.</p></div>';
        totalPriceElement.textContent = '';
        return;
      }

      cart.forEach((item, index) => {
        const price = parseFloat(item.price.replace('$', '')) || 0;
        const quantity = item.quantity || 1;
        const subtotal = price * quantity;
        total += subtotal;

        const col = document.createElement('div');
        col.className = 'col-md-4 mb-4';
        col.innerHTML = `
          <div class="card h-100 shadow-sm">
            <img src="${item.image}" class="card-img-top" alt="${item.name}">
            <div class="card-body d-flex flex-column">
              <h5 class="card-title">${item.name}</h5>
              <p class="card-text">${item.description}</p>
              <p class="card-text"><strong>Price: $${item.price}</strong></p>
              <div class="d-flex align-items-center mb-2">
                <button class="btn btn-sm btn-outline-secondary me-2" onclick="changeQuantity(${index}, -1)">-</button>
                <span>${quantity}</span>
                <button class="btn btn-sm btn-outline-secondary ms-2" onclick="changeQuantity(${index}, 1)">+</button>
              </div>
              <p class="card-text">Subtotal: $${subtotal.toFixed(2)}</p>
              <button class="btn btn-outline-danger mt-auto" onclick="removeFromCart(${index})">Remove</button>
            </div>
          </div>
        `;
        cartList.appendChild(col);
      });

      totalPriceElement.textContent = `Total: $${total.toFixed(2)}`;
    }

    function changeQuantity(index, delta) {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      if (!cart[index].quantity) cart[index].quantity = 1;
      cart[index].quantity += delta;
      if (cart[index].quantity <= 0) {
        cart.splice(index, 1);
      }
      localStorage.setItem(cartKey, JSON.stringify(cart));
      loadCart();
      updateCartCount();
    }

    function removeFromCart(index) {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      cart.splice(index, 1);
      localStorage.setItem(cartKey, JSON.stringify(cart));
      loadCart();
      updateCartCount();
    }

    function clearCart() {
      localStorage.removeItem(cartKey);
      loadCart();
      updateCartCount();
    }

    function checkout() {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      if (cart.length === 0) {
        alert("Your cart is empty.");
        return;
      }

      alert("Proceeding to payment gateway... (This would normally integrate Stripe/Razorpay)");

      localStorage.removeItem(cartKey);
      loadCart();
      updateCartCount();
    }

    function updateCartCount() {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      const count = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);
      document.getElementById('cart-count').textContent = count;
    }

    async function downloadInvoice() {
      const cart = JSON.parse(localStorage.getItem(cartKey)) || [];
      if (cart.length === 0) {
        alert("Your cart is empty.");
        return;
      }

      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      doc.setFont("helvetica", "normal");
      doc.setFontSize(18);
      doc.setTextColor(40, 167, 69);
      doc.text("Eco-Friendly Finder Invoice", 20, 20);

      doc.setFontSize(12);
      doc.setTextColor(0, 0, 0);
      doc.text(`Invoice #: INV-${Date.now()}`, 20, 30);
      doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, 37);
      doc.text(`Customer: Guest`, 20, 44);

      let y = 60;
      let total = 0;

      cart.forEach((item, i) => {
        const price = parseFloat(item.price.replace('$', '')) || 0;
        const quantity = item.quantity || 1;
        const subtotal = price * quantity;
        total += subtotal;

        doc.text(`${i + 1}. ${item.name} - ${quantity} x $${item.price} = $${subtotal.toFixed(2)}`, 20, y);
        y += 10;
      });

      doc.text(`Total: $${total.toFixed(2)}`, 20, y + 10);

      doc.setFontSize(10);
      doc.text("Thank you for supporting eco-friendly products!", 20, y + 20);

      doc.save('invoice.pdf');
    }

    loadCart();
    updateCartCount();
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const navLinks = document.querySelectorAll('.nav-link');
      const currentPath = window.location.pathname;

      navLinks.forEach(link => {
        if (currentPath.includes(link.getAttribute('href'))) {
          link.classList.add('active');
        }
      });
    });
  </script>
</body>
</html>
